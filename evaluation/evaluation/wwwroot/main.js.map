{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;;;;ACdnE,sEAAsE;AACtE,uEAAuE;AAOhE,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,UAAU,CAAC;KACpB;;wEAFY,YAAY;4FAAZ,YAAY;QCTzB,yEAAuB;QACrB,qEAAI;QAAA,+GAAoD;QAAA,4DAAK;QAC7D,oEAAG;QAAA,mEAAQ;QAAA,yEAAQ;QAAA,0EAAe;QAAA,4DAAS;QAAC,0FAA8B;QAAA,4DAAI;QAM9E,sEAAK;QAED,6EAA+D;QAAA,2EAAkB;QAAA,4DAAU;QAC3F,wEAAqD;QAAA,sEAAa;QAAA,4DAAI;QACtE,wEAAkD;QAAA,sEAAa;QAAA,4DAAI;QACnE,wEAAqD;QAAA,sEAAa;QAAA,4DAAI;QACvE,wEAAkD;QAAA,mEAAU;QAAA,4DAAI;QAC/D,wEAA2D;QAAA,8EAAqB;QAAA,4DAAI;QACpF,6EAA8D;QAAA,mEAAO;QAAA,4DAAS;QAE9E,wEAAqD;QAAA,uEAAc;QAAA,4DAAI;QAE3E,4DAAM;QACN,4EAA+B;QAE/B,qEAA6C;QAC7C,sEAA+C;QAC/C,sEAA+C;QAC/C,sEAA4C;QAC5C,sEAA+C;QAC/C,sEAA8C;QAC9C,sEAAiD;QACjD,sEAA4C;QAC5C,sEAA6C;QAE7C,6EAA8D;QAjChE,4DAAuB;;;;;;;;;;;;;;ACCvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AAEF;AACT;AACgC;AACpB;;AAiBpD,MAAM,SAAS;;kEAAT,SAAS;wFAAT,SAAS,cAFR,2DAAY;6FADb,EAAE,YAPJ;YACP,uEAAa;YACb,oEAAgB;YAChB,4FAAuB;YACvB,wEAAe;SAEhB;mIAIU,SAAS,mBAblB,2DAAY,aAIZ,uEAAa;QACb,oEAAgB;QAChB,4FAAuB;QACvB,wEAAe;;;;;;;;;;;;;AChBnB;AAAA;AAAA;AAAA;AAAuD;;;AAGvD,MAAM,MAAM,GAAW,EAEtB,CAAC;AAOK,MAAM,gBAAgB;;gFAAhB,gBAAgB;+FAAhB,gBAAgB;mGAJlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAGX,gBAAgB,uFAHjB,4DAAY;;;;;;;;;;;;;;;;;;;ACVuB;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component } from '@angular/core';\r\n//import { MySurveyComponent } from './my-survey/my-survey.component';\r\n//import { DashboardComponent } from './dashboard/dashboard.component';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'eValuate';\r\n}\r\n","<div class=\"container\">\r\n  <h2>Angular code changes by Nagarajan on 23-03-2021 raVI</h2>\r\n  <p>Use any <strong>text codfdfdfdl</strong> to add a color to the spinner:</p>\r\n  <!-- <ng-container >\r\n    <app-dashboard></app-dashboard>\r\n    <app-my-survey></app-my-survey>\r\n    \r\n  </ng-container> -->\r\n  <nav>\r\n   \r\n      <mat-tab routerLink=\"/selfassesment\" routerLinkActive=\"active\">Self Assesment    </mat-tab>\r\n      <a routerLink=\"/dashboard\" routerLinkActive=\"active\">Dashboard    </a>\r\n      <a routerLink=\"/survey\" routerLinkActive=\"active\">My Survey    </a>\r\n      <a routerLink=\"/assessors\" routerLinkActive=\"active\">Assessors    </a>\r\n     <a routerLink=\"/stores\" routerLinkActive=\"active\">Stores    </a>\r\n      <a routerLink=\"/plansandpricing\" routerLinkActive=\"active\">Plans and Pricing    </a>\r\n      <button mat-raised-button class= \"buttonData\" color=\"Upgrade\">Upgrade</button>\r\n      \r\n      <a routerLink=\"/newSurvey\" routerLinkActive=\"active\">New Survey    </a>\r\n   \r\n  </nav>\r\n  <router-outlet></router-outlet>\r\n                                        \r\n  <div class=\"spinner-border text-muted\"></div>\r\n  <div class=\"spinner-border text-primary\"></div>\r\n  <div class=\"spinner-border text-success\"></div>\r\n  <div class=\"spinner-border text-info\"></div>\r\n  <div class=\"spinner-border text-warning\"></div>\r\n  <div class=\"spinner-border text-danger\"></div>\r\n  <div class=\"spinner-border text-secondary\"></div>\r\n  <div class=\"spinner-border text-dark\"></div>\r\n  <div class=\"spinner-border text-light\"></div>\r\n\r\n  <mat-slider min=\"1\" max=\"100\" step=\"1\" value=\"1\"></mat-slider>\r\n  \r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    \r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatSliderModule\r\n    \r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\n\r\nconst routes: Routes = [\r\n  \r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n  declarations:[]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}